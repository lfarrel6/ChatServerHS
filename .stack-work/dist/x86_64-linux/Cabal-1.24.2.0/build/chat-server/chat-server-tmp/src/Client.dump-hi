
==================== FINAL INTERFACE ====================
2017-11-23 12:24:50.297896 UTC

interface main@main:Client 8002
  interface hash: 7f7c49ec04b78f5039c13d5cdc830165
  ABI hash: b228b2c822eb75892d8d147e4b56ec1d
  export-list hash: dc2ed1bed87f4247d0b82c23a54c5a29
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3c194b230b637ebe1fae50c4a42960fa
  sig of: Nothing
  used TH splices: False
  where
exports:
  Client.newClient
  Client.sendMessage
  Client.Client{Client.Client clientHandle clientID clientName clientSendChan}
module dependencies: Messaging
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Messaging f04aeb114106397bdf92099aab4b0374
  exports: f310fc71eaae6a08bfa41c14988b5de4
  Message 81b96bb465c9c68b18b5cb655a4a7e4f
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network c12ec0ca3509ab395a99ca2a2d280dc1
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 791cd378857d88a7ed4d753121139423
b0314290d2dbb8388e974d2e8874e347
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   546361165403039727##
                   5621374981733394025##
                   Client.$trModule
                   Client.$tc'Client1) -}
07a0cf86988ab0d9c594563424761f5e
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
3b1efb6ae3b881c51352ae343bf40456
  $tcClient :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13035372101703058773##
                   12326342888853119655##
                   Client.$trModule
                   Client.$trModule1) -}
124a063a5e01a9976c54d77202fe5ecd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Client.$trModule2
                   Client.$trModule1) -}
ca4a2cc8a30c93194c5f556b16b6afd8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Client"#) -}
29fbe5ca6e757999a3e525acf52d8ade
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b20e3d666e95d06f2b5eeba01ec9e9bc
  data Client
    = Client {clientName :: GHC.Base.String,
              clientID :: GHC.Types.Int,
              clientHandle :: GHC.IO.Handle.Types.Handle,
              clientSendChan :: Control.Concurrent.STM.TChan.TChan
                                  Messaging.Message}
413bcf243b4445e12c67671efbabc7fd
  clientHandle :: Client.Client -> GHC.IO.Handle.Types.Handle
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds3 }) -}
df7752add8a7891a20163e719f82fd14
  clientID :: Client.Client -> GHC.Types.Int
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds2 }) -}
a406aa17a6d07682336030d261f42a77
  clientName :: Client.Client -> GHC.Base.String
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds1 }) -}
97862ad5be81823e390ce184d67d2af1
  clientSendChan ::
    Client.Client
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds4 }) -}
1bf271c4d0ebc5dc6182eeab39b7088e
  newClient ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Types.IO Client.Client
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Client.newClient1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Client.Client>_R)) -}
fa25aba757e0643c3b6c61016a3aa7a5
  newClient1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Client.Client #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (name :: GHC.Base.String)
                   (id :: GHC.Types.Int)
                   (handle :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ Messaging.Message)
                        eta of ds { (#,#) ipv ipv1 ->
                 let {
                   hole :: GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message)
                   = GHC.Conc.Sync.TVar
                       @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                       ipv1
                 } in
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Client.Client
                      name
                      id
                      handle
                      (Control.Concurrent.STM.TChan.TChan
                         @ Messaging.Message
                         ipv3
                         ipv5) #) } } }) -}
1ad1188f3054b8413367093a94b80fba
  sendMessage ::
    Client.Client -> Messaging.Message -> GHC.Conc.Sync.STM ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(LS)),1*U(A,A,A,1*U(A,U))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Client.sendMessage1
                  `cast`
                (<Client.Client>_R
                 ->_R <Messaging.Message>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
18025ffbf509093db6d935e00a4373dc
  sendMessage1 ::
    Client.Client
    -> Messaging.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(LS)),1*U(A,A,A,1*U(A,U))><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Client.Client)
                   (eta :: Messaging.Message)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 ->
                 Control.Concurrent.STM.TChan.writeTChan1
                   @ Messaging.Message
                   ds4
                   eta
                   eta1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

