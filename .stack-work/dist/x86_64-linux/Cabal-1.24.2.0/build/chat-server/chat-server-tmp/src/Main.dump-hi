
==================== FINAL INTERFACE ====================
2017-11-24 13:52:07.747822 UTC

interface main@main:Main 8002
  interface hash: e160a070dccadb7aceb7e482920649fc
  ABI hash: b405814a6d7da4bff3d41f5e4de2b2af
  export-list hash: e3ae7ad65be28294ed15d0049910aa4f
  orphan hash: e3f907cc77bbc0eb7e4f425dad3f8e77
  flag hash: 270c8ee255cc931bcb919f6701982426
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.debug
  Main.disconnectArgs
  Main.handleMessage
  Main.joinArgs
  Main.killService
  Main.leaveArgs
  Main.main
  Main.runClient
  Main.sendMsgArgs
  Main.servSimple
  Main.talk
module dependencies: Chatroom Client Messaging
package dependencies: array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj:Control.Concurrent.Async ea0392541014747b7209d5d4a7804b6a
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc b311a66cb9dd2068c2414c0492c6937c
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Printf 6701574960cd2af960fec5d940be0c25
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 27b03ff780e9d73195c5aaa1719f6919
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class a1b222b41dee000240e3f24bda9d56d9
import  -/  Chatroom 68e75588180482bea56601cb20205ba7
  exports: 7798fb7334bf00194aff489de797b56b
  Server e215e1e2d66da278c6877491b3a0edf5
  joinChatroom 2dbf0e75c823d031be97e210a3312b84
  leave' a80eb5b5cdb433549c7c8c51a9129099
  newServer e867c7cda99c6936d54b0084c03a08e7
  removeClient 3204ff3392ea97d96441530a70e26349
  sendRoomMessage 572c4dbbc813abb97d1b54ffc9b65fce
import  -/  Client b228b2c822eb75892d8d147e4b56ec1d
  exports: dc2ed1bed87f4247d0b82c23a54c5a29
  Client f8fb221715f716c60dd010e518c9f00f
  Client b20e3d666e95d06f2b5eeba01ec9e9bc
  clientHandle 413bcf243b4445e12c67671efbabc7fd
  clientID df7752add8a7891a20163e719f82fd14
  clientName a406aa17a6d07682336030d261f42a77
  clientSendChan 97862ad5be81823e390ce184d67d2af1
  newClient 1bf271c4d0ebc5dc6182eeab39b7088e
  sendMessage 1ad1188f3054b8413367093a94b80fba
import  -/  Messaging f04aeb114106397bdf92099aab4b0374
  exports: f310fc71eaae6a08bfa41c14988b5de4
  Broadcast d49dc5529dfebeafedeb2cdc0db92a57
  Command 94cb95fded7d68bdc9098ff7a50e0556
  Error 15aa5d07900c9cc977e657d8e11c41cc
  Message 81b96bb465c9c68b18b5cb655a4a7e4f
  Notice 28d1a77b652beb4011be058f5d1387b0
  Response 966a7a8daeb515f976ee748ba1b54b09
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network c12ec0ca3509ab395a99ca2a2d280dc1
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Internal 9f052186d90733a29fe9bf6bf8921c1c
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Types e0e029ac5eaa30b6170e0170a0fb3341
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 791cd378857d88a7ed4d753121139423
a846f91ed410bfd476ab850310e22e30
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
c4753614eb4bb6049a700384e568c5c0
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b1fb3439911d9f2a74f674b67b363702
  $whandleMessage ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
    -> Messaging.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 8,
     Strictness: <L,U(U)><L,1*U(U)><L,U><L,U(U)><L,U><L,U(U,U)><S,1*U><S,U>,
     Inline: [0] -}
0f964805129102ae1d92ce6f19fd053c
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
e46a53ddc351db370d81e17629bccef4
  $wrunClient ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,U(U)><L,U(U)><L,U><L,U(U)><L,U><L,U(U,U)><S,U>,
     Inline: [0] -}
208e11c0a08b496322cd15feb5b4333f
  debug :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                System.IO.putStrLn1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bdccac902d74fe37a1d1b76005c24249
  disconnectArgs :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
2eb6b331ddaae4c254427f85c78eef63
  handleMessage ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> Client.Client
    -> Messaging.Message
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(U)><L,1*U(U)><S,1*U(U,U(U),U,U(U,U))><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.handleMessage1
                  `cast`
                (<Chatroom.Server>_R
                 ->_R <Network.Socket.Types.PortNumber>_R
                 ->_R <Client.Client>_R
                 ->_R <Messaging.Message>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
24828db22efe71f7c906b681dde9ee5a
  handleMessage1 ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> Client.Client
    -> Messaging.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 5,
     Strictness: <L,U(U)><L,1*U(U)><S,1*U(U,U(U),U,U(U,U))><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Chatroom.Server)
                   (w1 :: Network.Socket.Types.PortNumber)
                   (w2 :: Client.Client)
                   (w3 :: Messaging.Message)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Client.Client ww1 ww2 ww3 ww4 ->
                 Main.$whandleMessage w w1 ww1 ww2 ww3 ww4 w3 w4 }) -}
72f560fc73aed7e89f350818b98abc75
  joinArgs :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
e546a5d179f7bcb019a2833bfcf07993
  killService :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "KILL"#) -}
4febe211c27c8b9931d46dc5c3a64fcd
  leaveArgs :: GHC.Types.Int
  {- Strictness: m, Unfolding: (Main.disconnectArgs) -}
d9c0dee8a685c5ed422401aaa63f23bf
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
01d62c2c484918d4b5d94b688c90c90e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
129a1a814fa667791781f32a098e848d
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
6e5d1db4a5f574edd2300a5addec548b
  runClient ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> Client.Client
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(U)><L,U(U)><S,1*U(U,U(U),U,U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runClient1
                  `cast`
                (<Chatroom.Server>_R
                 ->_R <Network.Socket.Types.PortNumber>_R
                 ->_R <Client.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c7697ca7059ca34d6c219ab819c29485
  runClient1 ::
    Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> Client.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(U)><L,U(U)><S,1*U(U,U(U),U,U(U,U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Chatroom.Server)
                   (w1 :: Network.Socket.Types.PortNumber)
                   (w2 :: Client.Client)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Client.Client ww1 ww2 ww3 ww4 ->
                 Main.$wrunClient w w1 ww1 ww2 ww3 ww4 w3 }) -}
cfdfdaca340a95349c3d221bf65c7cd6
  sendMsgArgs :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
21cc0e0a8f585a75f044b4c56d810dd0
  servSimple ::
    GHC.IO.Handle.Types.Handle
    -> Network.Socket.Types.PortNumber
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.servSimple1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <Network.Socket.Types.PortNumber>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b353ee2bd0f521f4ae726509ec400297
  servSimple1 ::
    GHC.IO.Handle.Types.Handle
    -> Network.Socket.Types.PortNumber
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U><S,U>,
     Unfolding: (\ (hdl :: GHC.IO.Handle.Types.Handle)
                   (port :: Network.Socket.Types.PortNumber)
                   (msg :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        hdl
                        (GHC.CString.unpackAppendCString#
                           "HELO "#
                           (GHC.Base.++
                              @ GHC.Types.Char
                              msg
                              (GHC.CString.unpackAppendCString#
                                 "\n\
                                 \134.226.44.141\n\
                                 \Port:"#
                                 (case port
                                         `cast`
                                       (Network.Socket.Types.N:PortNumber[0]) of ww { GHC.Word.W16# ww1 ->
                                  case {__pkg_ccall network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz ntohs GHC.Prim.Word#
                                                                                                                 -> GHC.Prim.State#
                                                                                                                      GHC.Prim.RealWorld
                                                                                                                 -> (# GHC.Prim.State#
                                                                                                                         GHC.Prim.RealWorld,
                                                                                                                       GHC.Prim.Word# #)}
                                         ww1
                                         GHC.Prim.realWorld# of wild { (#,#) ds ds1 ->
                                  case GHC.Show.$wshowSignedInt
                                         0#
                                         (GHC.Prim.word2Int# (GHC.Prim.narrow16Word# ds1))
                                         (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                                  GHC.Base.++
                                    @ GHC.Types.Char
                                    (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                                    Main.servSimple2 } } }))))
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
b9bd17e30bc7f324320ddcce2f7ac9dc
  servSimple2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \StudentID:14317869\n"#) -}
45d35846d31fc6736ae739cb364f0e98
  talk ::
    GHC.IO.Handle.Types.Handle
    -> Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.talk1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <Chatroom.Server>_R
                 ->_R <Network.Socket.Types.PortNumber>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
275c84b5c458650f20d99dea28c8c4a0
  talk1 ::
    GHC.IO.Handle.Types.Handle
    -> Chatroom.Server
    -> Network.Socket.Types.PortNumber
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,U(U)><S,U> -}
"SPEC/Main $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                              GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = Main.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

