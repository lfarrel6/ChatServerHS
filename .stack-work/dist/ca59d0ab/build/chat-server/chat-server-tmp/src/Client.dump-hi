
==================== FINAL INTERFACE ====================
2017-11-24 18:08:02.6626723 UTC

interface main@main:Client 8002
  interface hash: 9e324aff11703dc5ac7ecc22ba7e4620
  ABI hash: 60e3f84f754da476ce184521bd7aa129
  export-list hash: 666d36a982cc188841e651659b23e68c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a330f96cda9be82db80ff988c3410755
  sig of: Nothing
  used TH splices: False
  where
exports:
  Client.newClient
  Client.sendMessage
  Client.Client{Client.Client clientHandle clientID clientName clientSendChan}
module dependencies: Messaging
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Concurrent e3f6962e2eee72e46a7f524818b5ed3e
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Conc.Sync 18bcf7264dc8f03029975495d151af25
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 638c6e55b150de2630213031097f67d4
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Messaging 367adaefd9d70f0728d509d82bf3508b
  exports: f310fc71eaae6a08bfa41c14988b5de4
  Message 3960ccad6e371be763845f868c067b6b
import  -/  network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk:Network ccc7f9bd02df797c247d61468b8591fb
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM d9d67004f2499de74f3785f434493839
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 64612af800e1a2e6674a1b1a89b35a5e
b0314290d2dbb8388e974d2e8874e347
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   546361165403039727##
                   5621374981733394025##
                   Client.$trModule
                   Client.$tc'Client1) -}
07a0cf86988ab0d9c594563424761f5e
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
3b1efb6ae3b881c51352ae343bf40456
  $tcClient :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13035372101703058773##
                   12326342888853119655##
                   Client.$trModule
                   Client.$trModule1) -}
124a063a5e01a9976c54d77202fe5ecd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Client.$trModule2
                   Client.$trModule1) -}
ca4a2cc8a30c93194c5f556b16b6afd8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Client"#) -}
29fbe5ca6e757999a3e525acf52d8ade
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4224fbd4a4e15ceb7bb641fc13b32f2b
  data Client
    = Client {clientName :: GHC.Base.String,
              clientID :: GHC.Types.Int,
              clientHandle :: GHC.IO.Handle.Types.Handle,
              clientSendChan :: Control.Concurrent.STM.TChan.TChan
                                  Messaging.Message}
c3672b57bec76d6165350ba41bae9bb7
  clientHandle :: Client.Client -> GHC.IO.Handle.Types.Handle
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds3 }) -}
d71a351b06d3b7132cdacf724af5017c
  clientID :: Client.Client -> GHC.Types.Int
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds2 }) -}
c6755516b245b5391cbb4d1984d30a13
  clientName :: Client.Client -> GHC.Base.String
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds1 }) -}
e8740b5ced785c56b7a4bcea71d90ae9
  clientSendChan ::
    Client.Client
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
  RecSel Left Client.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Client.Client) ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 -> ds4 }) -}
c90400d1ebbea9c7d975ee175e2e5b4e
  newClient ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Types.IO Client.Client
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Client.newClient1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Client.Client>_R)) -}
7eaa0dc452f214d70c70393b4b11a6b7
  newClient1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Client.Client #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (name :: GHC.Base.String)
                   (id :: GHC.Types.Int)
                   (handle :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ Messaging.Message)
                        eta of ds { (#,#) ipv ipv1 ->
                 let {
                   hole :: GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message)
                   = GHC.Conc.Sync.TVar
                       @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                       ipv1
                 } in
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Messaging.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Client.Client
                      name
                      id
                      handle
                      (Control.Concurrent.STM.TChan.TChan
                         @ Messaging.Message
                         ipv3
                         ipv5) #) } } }) -}
7b4db5351003a3f387a416acb178d278
  sendMessage ::
    Client.Client -> Messaging.Message -> GHC.Conc.Sync.STM ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(LS)),1*U(A,A,A,1*U(A,U))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Client.sendMessage1
                  `cast`
                (<Client.Client>_R
                 ->_R <Messaging.Message>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
2354dd5152875efc3ebbf6a0f3ce65fa
  sendMessage1 ::
    Client.Client
    -> Messaging.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(LS)),1*U(A,A,A,1*U(A,U))><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Client.Client)
                   (eta :: Messaging.Message)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Client.Client ds1 ds2 ds3 ds4 ->
                 Control.Concurrent.STM.TChan.writeTChan1
                   @ Messaging.Message
                   ds4
                   eta
                   eta1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

