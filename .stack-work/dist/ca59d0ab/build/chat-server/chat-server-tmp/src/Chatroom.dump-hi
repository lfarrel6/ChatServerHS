
==================== FINAL INTERFACE ====================
2017-11-24 20:53:29.2967452 UTC

interface main@main:Chatroom 8002
  interface hash: 0a41bf7b1b85e82dcd26d6d6337e2faf
  ABI hash: cc1ff926f6cb39171238ee756ded3745
  export-list hash: 6aaa4538ff300383a5fbb594b895518b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a330f96cda9be82db80ff988c3410755
  sig of: Nothing
  used TH splices: False
  where
exports:
  Chatroom.deleteChatroom
  Chatroom.getChatroom
  Chatroom.joinChatroom
  Chatroom.leave'
  Chatroom.leaveChatroom
  Chatroom.newChatroom
  Chatroom.newServer
  Chatroom.removeClient
  Chatroom.sendRoomMessage
  Chatroom.Chatroom
  Chatroom.Server
module dependencies: Client Messaging
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Conc.Sync 18bcf7264dc8f03029975495d151af25
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 6c2364c30285a1caa610caab304974c4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base dfcca0a6b3fe956067f7db6df4d400c2
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable bcc0805ccd30e6faaa2d13862a166356
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class e8d09170813d4540def5c8ad0cd3d04c
import  -/  Client 60e3f84f754da476ce184521bd7aa129
  exports: 666d36a982cc188841e651659b23e68c
  Client 4339dc20b0bed9081f0a0cd503e645e8
  Client 4224fbd4a4e15ceb7bb641fc13b32f2b
  clientHandle c3672b57bec76d6165350ba41bae9bb7
  clientID d71a351b06d3b7132cdacf724af5017c
  clientName c6755516b245b5391cbb4d1984d30a13
  clientSendChan e8740b5ced785c56b7a4bcea71d90ae9
  sendMessage 7b4db5351003a3f387a416acb178d278
import  -/  Messaging 367adaefd9d70f0728d509d82bf3508b
  exports: f310fc71eaae6a08bfa41c14988b5de4
  Broadcast a8d7d4935c572e264ebe3725c90213a6
  Message 3960ccad6e371be763845f868c067b6b
  Response 082341594ed79c91ef655f8ca9852f1d
import  -/  network-2.6.3.2@network-2.6.3.2-F0OcsS89osODGCGHNf1FTk:Network ccc7f9bd02df797c247d61468b8591fb
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM d9d67004f2499de74f3785f434493839
9bf980a59b12a0b9350349570c911085
  $slookup1 ::
    GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Map.Base.Map GHC.Types.Int a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Chatroom.$wpoly_go10 @ a ww1 w1 }) -}
ef1be84b300937f3e28099f650c1d0d3
  $tc'Chatroom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15807251169816211723##
                   3770388226591694245##
                   Chatroom.$trModule
                   Chatroom.$tc'Chatroom1) -}
0d610a735e66fca43d79ff340335b4c5
  $tc'Chatroom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chatroom"#) -}
417325741d4a4766615a1ba11d09823a
  $tcChatroom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7115687492536934074##
                   7579549064823456019##
                   Chatroom.$trModule
                   Chatroom.$trModule1) -}
bfe2deb9745959d3502e2b6ff26018fb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Chatroom.$trModule2
                   Chatroom.$trModule1) -}
f260ed08fbbd20ce9ce2b982f988cf55
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Chatroom"#) -}
fab4685f4ab9612d8df4ca49a65335f7
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
aaf4ee7b5773e56301dd7b420d5c45c8
  $w$sgo1 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
4708794c79f6aa9f4f1876d12048a5d6
  $w$sgo10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
c21e27f04428ced0c8ac82b1be06f140
  $wdeleteChatroom ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom))
                   (ww1 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    case Chatroom.$wpoly_go10 @ Chatroom.Chatroom ww1 ipv1 of wild {
                      GHC.Base.Nothing -> (# ipv, GHC.Tuple.() #)
                      GHC.Base.Just aRoom
                      -> case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
                                ww
                                (Chatroom.$w$sgo10 @ Chatroom.Chatroom ww1 ipv1)
                                ipv of s2# { DEFAULT ->
                         (# s2#, GHC.Tuple.() #) } } })
                   w) -}
890e6a131c1729715b4e5b048dcaaa33
  $wjoinChatroom ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Messaging.Message)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Messaging.Message)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <L,U><L,U(U)><L,U><L,U><S,U><S,U><L,1*U(U)><S,U><S,U>,
     Inline: [0] -}
7fd102e92957dcdb7d641b00e9cff279
  $wleave' ::
    GHC.Base.String
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U><L,1*U(A,U)><S,U><L,U><L,1*U(U)><S,U>,
     Inline: [0] -}
c158b2df669b0553e60764eaec28006a
  $wnewChatroom ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Control.Concurrent.STM.TChan.TChan Messaging.Message
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Chatroom.Chatroom #)
  {- Arity: 6, Strictness: <L,U><L,U(U)><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.IO.Handle.Types.Handle)
                   (ww3 :: Control.Concurrent.STM.TChan.TChan Messaging.Message)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Client.Client)
                        @ GHC.Prim.RealWorld
                        (case ww1 of ww4 { GHC.Types.I# ww5 ->
                         Chatroom.$w$sgo1
                           @ Client.Client
                           ww5
                           (Client.Client ww ww4 ww2 ww3)
                           (Data.Map.Base.Tip @ GHC.Types.Int @ Client.Client) })
                        w1 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    Chatroom.Chatroom
                      w
                      (Data.Hashable.Class.$fHashable[]_$s$chash w)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Types.Int Client.Client)
                         ipv1) #) }) -}
596ebcfa1e50de02bf45043f6a07c1c7
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
9849837c98ca1b20039e1b2acde1a74a
  $wremoveClient ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,U><L,U(U)><S,U>, Inline: [0] -}
8e417eef49a44a0735a405ba07a2fb42
  $wsendRoomMessage ::
    Messaging.Message
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Client.Client)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Messaging.Message)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Client.Client))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Types.Int Client.Client)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    letrec {
                      go1 :: GHC.Conc.Sync.STM ()
                             -> Data.Map.Base.Map GHC.Types.Int Client.Client
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        {- Arity: 3, Strictness: <C(S),1*C1(U(U,U))><S,1*U><S,U> -}
                      = \ (z' :: GHC.Conc.Sync.STM ())
                          (ds :: Data.Map.Base.Map GHC.Types.Int Client.Client)
                          (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                        case ds of wild {
                          Data.Map.Base.Bin dt kx x l r
                          -> go1
                               (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                case x of wild1 { Client.Client ds2 ds3 ds4 ds5 ->
                                case ds5 of wild2 { Control.Concurrent.STM.TChan.TChan dt1 dt2 ->
                                case GHC.Prim.readTVar#
                                       @ GHC.Prim.RealWorld
                                       @ (Control.Concurrent.STM.TChan.TVarList Messaging.Message)
                                       dt2
                                       eta1 of ds6 { (#,#) ipv2 ipv3 ->
                                case GHC.Prim.newTVar#
                                       @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                                       @ GHC.Prim.RealWorld
                                       (Control.Concurrent.STM.TChan.TNil @ Messaging.Message)
                                       ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                                case ipv3 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                                case GHC.Prim.writeTVar#
                                       @ GHC.Prim.RealWorld
                                       @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                                       tvar#
                                       (Control.Concurrent.STM.TChan.TCons
                                          @ Messaging.Message
                                          w
                                          ipv5)
                                       ipv4 of s2# { DEFAULT ->
                                case GHC.Prim.writeTVar#
                                       @ GHC.Prim.RealWorld
                                       @ (Control.Concurrent.STM.TChan.TVarList Messaging.Message)
                                       dt2
                                       (GHC.Conc.Sync.TVar
                                          @ (Control.Concurrent.STM.TChan.TList Messaging.Message)
                                          ipv5)
                                       s2# of s2#1 { DEFAULT ->
                                go1 z' r s2#1 } } } } } } })
                                 `cast`
                               (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                               l
                               eta
                          Data.Map.Base.Tip
                          -> z' `cast` (GHC.Conc.Sync.N:STM[0] <()>_R) eta }
                    } in
                    go1
                      Chatroom.sendRoomMessage2
                        `cast`
                      (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                      ipv1
                      ipv })
                   w1) -}
89e9cb4c2b50f1838d4109986e56da72
  data Chatroom
    = Chatroom {roomName :: GHC.Base.String,
                roomRef :: GHC.Types.Int,
                members :: GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int Client.Client)}
6a453757b7b733c1e0028a6036f9a2df
  type Server =
    GHC.Conc.Sync.TVar
      (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
32324c4b13426aa1d8896c4bf85c42e5
  deleteChatroom ::
    Chatroom.Server -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.deleteChatroom1
                  `cast`
                (<Chatroom.Server>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
078f1c3946a0156e93a2b907d93bdfaa
  deleteChatroom1 ::
    Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Chatroom.Server)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Conc.Sync.TVar ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Chatroom.$wdeleteChatroom ww1 ww3 w2 } }) -}
d7272190b532aeb7f9785901f47c1c7d
  getChatroom ::
    GHC.Types.Int
    -> Chatroom.Server
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe Chatroom.Chatroom)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.getChatroom1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Chatroom.Server>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe Chatroom.Chatroom>_R)) -}
50cbcdeca8352bc7ebe3b699f88ad75b
  getChatroom1 ::
    GHC.Types.Int
    -> Chatroom.Server
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Chatroom.Chatroom #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (roomRef1 :: GHC.Types.Int)
                   (serv :: Chatroom.Server)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case serv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case Chatroom.$slookup1
                        @ Chatroom.Chatroom
                        roomRef1
                        ipv1 of wild1 {
                   GHC.Base.Nothing -> (# ipv, GHC.Base.Nothing @ Chatroom.Chatroom #)
                   GHC.Base.Just x
                   -> (# ipv, GHC.Base.Just @ Chatroom.Chatroom x #) } } }) -}
eb512a6d534b1620845b5114901f7722
  joinChatroom ::
    Client.Client
    -> Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S(LLLS(LS)),1*U(U,U(U),U,U(U,U))><S(S),1*U(U)><L,1*U(U)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.joinChatroom1
                  `cast`
                (<Client.Client>_R
                 ->_R <Chatroom.Server>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fa67a19028158dc7a618442adb03c823
  joinChatroom1 ::
    Client.Client
    -> Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(LLLS(LS)),1*U(U,U(U),U,U(U,U))><S(S),1*U(U)><L,1*U(U)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Client.Client)
                   (w1 :: Chatroom.Server)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Client.Client ww1 ww2 ww3 ww4 ->
                 case ww4 of ww5 { Control.Concurrent.STM.TChan.TChan ww6 ww7 ->
                 case w1 of ww8 { GHC.Conc.Sync.TVar ww9 ->
                 Chatroom.$wjoinChatroom ww1 ww2 ww3 ww6 ww7 ww9 w2 w3 w4 } } }) -}
84312cd9619ff466cb1f4feb6f281624
  leave' ::
    Client.Client
    -> Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S,1*U(U,A,A,1*U(A,U))><S(S),1*U(U)><S,U(U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.leave'1
                  `cast`
                (<Client.Client>_R
                 ->_R <Chatroom.Server>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ee061e8fe87438d0b254b5bc3aa25b5b
  leave'1 ::
    Client.Client
    -> Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S,1*U(U,A,A,1*U(A,U))><S(S),1*U(U)><S,U(U)><L,1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Client.Client)
                   (w1 :: Chatroom.Server)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Client.Client ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { GHC.Conc.Sync.TVar ww6 ->
                 case w2 of ww7 { GHC.Types.I# ww8 ->
                 Chatroom.$wleave' ww1 ww4 ww6 ww8 w3 w4 } } }) -}
c0148c124f894117f702e7134886276f
  leaveChatroom ::
    Client.Client
    -> Chatroom.Server -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U,1*U(U),A,1*U(A,U))><S(S),1*U(U)><S,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.leaveChatroom1
                  `cast`
                (<Client.Client>_R
                 ->_R <Chatroom.Server>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8c4cd4baa630bac50adac06b9287e3ec
  leaveChatroom1 ::
    Client.Client
    -> Chatroom.Server
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U,1*U(U),A,1*U(A,U))><S(S),1*U(U)><S,U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (client :: Client.Client)
                   (server :: Chatroom.Server)
                   (roomRef1 :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case client of wild { Client.Client ds ds1 ds2 ds3 ->
                 Chatroom.leave'1
                   wild
                   server
                   roomRef1
                   (GHC.Num.$fNumInt_$c+ roomRef1 ds1)
                   eta }) -}
923f7926be1190778ca16a0d5fa7a214
  members ::
    Chatroom.Chatroom
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map GHC.Types.Int Client.Client)
  RecSel Left Chatroom.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Chatroom.Chatroom) ->
                 case ds of wild { Chatroom.Chatroom ds1 ds2 ds3 -> ds3 }) -}
b198e2ca0094d57008718d409a026c3f
  newChatroom ::
    Client.Client
    -> GHC.Base.String -> GHC.Conc.Sync.STM Chatroom.Chatroom
  {- Arity: 3, Strictness: <S,1*U(U,U(U),U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.newChatroom1
                  `cast`
                (<Client.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <Chatroom.Chatroom>_R)) -}
b24850b5b80f4a1db37564c8597735eb
  newChatroom1 ::
    Client.Client
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Chatroom.Chatroom #)
  {- Arity: 3, Strictness: <S,1*U(U,U(U),U,U)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Client.Client)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Client.Client ww1 ww2 ww3 ww4 ->
                 Chatroom.$wnewChatroom ww1 ww2 ww3 ww4 w1 w2 }) -}
09d1dfbb91675ebd343178135ad6eb61
  newServer :: GHC.Types.IO Chatroom.Server
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.newServer1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)>_R)) -}
946756f0e2999560bce72c5e3d40268f
  newServer1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar
            (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1# :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Types.Int @ Chatroom.Chatroom)
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Conc.Sync.TVar
                      @ (Data.Map.Base.Map GHC.Types.Int Chatroom.Chatroom)
                      ipv1 #) }) -}
f9142e0222346e6046727d5c61db2d59
  removeClient :: Chatroom.Server -> Client.Client -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <S(S),U(U)><S,1*U(U,U(U),A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.removeClient1
                  `cast`
                (<Chatroom.Server>_R
                 ->_R <Client.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fda9942d8a50263b59d14eb1240890ad
  removeClient1 ::
    Chatroom.Server
    -> Client.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S(S),U(U)><S,1*U(U,U(U),A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Chatroom.Server)
                   (w1 :: Client.Client)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Conc.Sync.TVar ww1 ->
                 case w1 of ww2 { Client.Client ww3 ww4 ww5 ww6 ->
                 Chatroom.$wremoveClient ww1 ww3 ww4 w2 } }) -}
dd9e45917d7f33f9096188a0f058e76e
  roomName :: Chatroom.Chatroom -> GHC.Base.String
  RecSel Left Chatroom.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Chatroom.Chatroom) ->
                 case ds of wild { Chatroom.Chatroom ds1 ds2 ds3 -> ds1 }) -}
0a14adbf33c8eca3646d439ec513e66e
  roomRef :: Chatroom.Chatroom -> GHC.Types.Int
  RecSel Left Chatroom.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Chatroom.Chatroom) ->
                 case ds of wild { Chatroom.Chatroom ds1 ds2 ds3 -> ds2 }) -}
40c4fbc2268d74c17e7530b50a3f30a0
  sendRoomMessage ::
    Messaging.Message -> Chatroom.Chatroom -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLS(S)),1*U(A,A,1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Chatroom.sendRoomMessage1
                  `cast`
                (<Messaging.Message>_R
                 ->_R <Chatroom.Chatroom>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
011e457be2cbf162a6b4d9238319af34
  sendRoomMessage1 ::
    Messaging.Message
    -> Chatroom.Chatroom
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLS(S)),1*U(A,A,1*U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Messaging.Message)
                   (w1 :: Chatroom.Chatroom)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Chatroom.Chatroom ww1 ww2 ww3 ->
                 case ww3 of ww4 { GHC.Conc.Sync.TVar ww5 ->
                 Chatroom.$wsendRoomMessage w ww5 w2 } }) -}
87b675d05463d0f18899caabba0a6e03
  sendRoomMessage2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

